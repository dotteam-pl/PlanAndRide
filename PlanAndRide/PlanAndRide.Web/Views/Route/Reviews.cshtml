@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;

@model RouteDtoWithReviews
@{
    ViewData["Title"] = "Reviews";
    var orderSelectList = new List<SelectListItem>() {
                new SelectListItem(text:"newest",value:"date_desc",selected: true),
                new SelectListItem(text:"oldest",value:"date_asc"),
                new SelectListItem(text:"best",value:"score_desc"),
                new SelectListItem(text:"worst",value:"score_asc")
                };
    var pageSizeSelectList = new List<SelectListItem>() {
                new SelectListItem(text:"5",value:"5",selected: true),
                new SelectListItem(text:"10",value:"10"),
                new SelectListItem(text:"20",value:"20"),
                new SelectListItem(text:"50",value:"50")
                };
    var orderBy = ViewBag.OrderBy;
    var pageSize = ViewBag.PageSize;
    var currentPage = ViewBag.Page;
    var reviewsCountDesc = $"{Model.PagedReviews.TotalItemCount} ";
    if (Model.PagedReviews.TotalItemCount == 1)
        reviewsCountDesc += "review";
    else
        reviewsCountDesc += "reviews";
}
<div class="container">
    @*<h2>Reviews</h2>*@
    <br />
    <h3>@Model.Name</h3>
    <div class="route-rating display-inline">
        <input type="hidden" asp-for="@Model.AverageScore" id="rating-value" />
    </div>
    <span>@reviewsCountDesc</span>
    <hr />
    @if (Model.ReviewedByCurrentUser)
    {
        <div>You have already reviewed this route</div>
    }
    else
    {
        <div class="button" id="button-animation">
            <div id="translate"></div>
            <a class="submit-button" asp-controller="Review" asp-action="Create" asp-route-routeId=@Model.Id>Add review</a>
        </div>
    }
    <div class="container" id="scrollTo">
        <div class="page-size-dropdown">
            <form asp-action="Reviews" method="get">
                <div class="form-row">
                    <label class="dropdown-label">Show </label>
                    @Html.DropDownList("pageSize", pageSizeSelectList,
                    new
                    {
                    @class="",
                    @onchange="redirectOnPageSizeChange(this.value);"
                    })
                    <label class="dropdown-label"> entries </label>
                </div>
            </form>
        </div>
        <div class="order-by-dropdown">
            <form asp-action="Reviews" method="get">
                <div class="form-row">
                    <label class="dropdown-label">Order by: </label>
                    @Html.DropDownList("orderBy", orderSelectList,
                    new
                    {
                    @class="",
                    @onchange="redirectOnOrderChange(this.value);"
                    })
                </div>
            </form>
        </div>
        <div style="clear:both;"></div>
        @foreach (var item in Model.PagedReviews)
        {
            <div class="review row">
                <div class="col-sm-12">
                    <div class="col-12 col-sm-5 col-md-3 col-lg-3 display-inline">
                        Date: @item.Date
                    </div>
                    <div class="route-collection-rating col-12 col-sm-5 col-md-4 col-lg-3 display-inline" id="route-rating-@item.Id">
                        Rating:
                        <input type="hidden" asp-for="@item.Score" id="rating-value-@item.Id" />
                    </div>
                    <div class="col-sm-12 col-md-5 col-lg-6">
                        Author: @item.UserName
                    </div>
                </div>
                <div class="col-sm-12">
                    <div class="col-2 col-sm-2 display-inline review-content-header">
                        @if (!String.IsNullOrEmpty(item.Description))
                        {
                            <span>Review:</span> 
                        }
                    </div>
                    <div class="col-10 col-sm-10 display-inline review-content">
                        @item.Description
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="page-current-number">
        Page @(Model.PagedReviews.PageCount < Model.PagedReviews.PageNumber ? 0 : Model.PagedReviews.PageNumber) of @Model.PagedReviews.PageCount
    </div>


    @if (Model.PagedReviews.PageCount > 1)
    {
        @Html.PagedListPager(Model.PagedReviews,
    page => Url.Action("Reviews", new { page, orderBy = @orderBy,id=@Model.Id, pageSize=@pageSize}),
    new PagedListRenderOptions {LiElementClasses = new string[] { "page-item" }, PageClasses = new string[] { "page-link" }})
    }
    <div>
        <a class="btn btn-outline-secondary grey-button" asp-action="Index">Routes list</a>
        <a class="btn btn-outline-secondary grey-button" asp-action="Details" asp-route-id="@Model.Id">Back to details</a>
    </div>
</div>
@section Scripts{
<script>
    $('document').ready(showStarRatingForSingleRoute());
    $('document').ready(showStarRatingForRoutesList());
</script>
<script>
    function redirectOnOrderChange(dropDownValue){
        window.location.href = '/Route/Reviews/'
        + @Model.Id
        + '?orderBy=' + dropDownValue
        + '&page=' + @currentPage
        + '&pageSize=' + @pageSize;
    }
    function redirectOnPageSizeChange(dropDownValue){
        window.location.href = '/Route/Reviews/'
        + @Model.Id
        + '?orderBy=' + '@orderBy'
        + '&page=' + @currentPage
        + '&pageSize=' + dropDownValue;
    }
</script>
<script>
    $(document).ready(function () {
        $('html, body').animate({
            scrollTop: $("#scrollTo").offset().top
        }, 1);
    });
    </script>
}
