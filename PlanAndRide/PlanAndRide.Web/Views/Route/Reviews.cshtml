@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;

@model RouteDtoWithReviews
@{
    ViewData["Title"] = "Reviews";
    var orderSelectList = new List<SelectListItem>() {
                new SelectListItem(text:"date descending",value:"date_desc",selected: true),
                new SelectListItem(text:"date ascending",value:"date_asc"),
                new SelectListItem(text:"score descending",value:"score_desc"),
                new SelectListItem(text:"score ascending",value:"score_asc")
                };
    var orderBy = ViewBag.OrderBy;
    var pageSize = ViewBag.PageSize;
    var currentPage = ViewBag.Page;
}
<div class="container">
    <h2>Reviews</h2>
    <h3>@Model.Name</h3>
    <div class="route-rating">
        <input type="hidden" asp-for="@Model.AverageScore" id="rating-value" />
    </div>
    <hr />
    <a class="btn btn-outline-primary red-button" asp-controller="Review" asp-action="Create" asp-route-routeId=@Model.Id>Add review</a>
@*    <h5>Reviews: </h5>*@
    <div class="fluid-container">
        <div class="order-by-dropdown">
            <form asp-action="Reviews" method="get">
                <div class="form-row">
                    <label class="orderBy">Order by: </label> 
                    @Html.DropDownList("orderBy", orderSelectList,
                    new
                    {
                        @class="",
                        @onchange="redirectOnOrderChange(this.value);"
                    })
                </div>
            </form>
        </div>
        <div style="clear:both;"></div>
        @foreach (var item in Model.PagedReviews)
        {
            <div class="review">
                <div>
                    <div class="display-inline col-sm-2">
                        @item.Date
                    </div>
                    <div class="display-inline col-sm-9">
                        @item.UserName
                    </div>
                    <div class="route-collection-rating" id="route-rating-@item.Id">
                        <input type="hidden" asp-for="@item.Score" id="rating-value-@item.Id" />
                    </div>
                </div>
                <div class="review-content">
                    @item.Description
                </div>
            </div>
        }
    </div>

    <div class="page-current-number">
         Page @(Model.PagedReviews.PageCount < Model.PagedReviews.PageNumber ? 0 : Model.PagedReviews.PageNumber) of @Model.PagedReviews.PageCount
    </div>
   

    @{
        if(Model.PagedReviews.PageCount > 1)
        {
            @Html.PagedListPager(
            Model.PagedReviews, 
            page => Url.Action("Reviews", new { page, orderBy = @orderBy,id=@Model.Id, pageSize=@pageSize}),
            new PagedListRenderOptions {
                    LiElementClasses = new string[] { "page-item" },
                    PageClasses = new string[] { "page-link" }
                    }
                )
        }

    }
    

    <div>
        <a class="btn btn-outline-secondary grey-button" asp-action="Index">Routes list</a>
        <a class="btn btn-outline-secondary grey-button" asp-action="Details" asp-route-id="@Model.Id">Back to details</a> 
        
    </div>
</div>
@section Scripts{
<script>
    $('document').ready(showStarRatingForSingleRoute());
    $('document').ready(showStarRatingForRoutesList());
</script>
<script>
    function redirectOnOrderChange(dropDownValue){
        window.location.href = '/Route/Reviews/'
        + @Model.Id 
        + '?orderBy=' + dropDownValue
        + '&page=' + @currentPage
        + '&pageSize=' + @pageSize;
    }
</script>
}
